name: DRAM PHY CI

on:
  push:
    branches: ["main", "tud-riscv-framework"]
  pull_request:

jobs:
  build-verilator:
    name: Build Verilator
    uses: ./.github/workflows/build-verilator.yml

  tests:
    name: Unit tests
    needs: [build-verilator]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [rtl-tests, sim-tests]
    env:
      DEBIAN_FRONTEND: "noninteractive"
      VERILATOR_VERSION: v5.018

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system dependencies
        run: |
          sudo apt -qqy update && sudo apt -qqy --no-install-recommends install \
            build-essential python3 python3-pip python3-venv python3-dev git \
            gcc-riscv64-unknown-elf picolibc-riscv64-unknown-elf sigrok-cli ccache
          echo "/opt/verilator/bin" >> $GITHUB_PATH

      - name: Setup Cache Metadata
        id: cache_metadata
        run: |
          date=$(date +"%Y_%m_%d")
          time=$(date +"%Y%m%d_%H%M%S_%N")
          cache_verilator_restore_key=cache_verilator_
          cache_verilator_key=${cache_verilator_restore_key}${{ env.VERILATOR_VERSION }}
          cache_test_restore_key=${{ matrix.test }}_${{ matrix.coverage }}_
          cache_test_key=${cache_test_restore_key}${time}

          echo "date=$date" | tee -a "$GITHUB_ENV"
          echo "time=$time" | tee -a "$GITHUB_ENV"
          echo "cache_verilator_restore_key=$cache_verilator_restore_key" | tee -a "$GITHUB_ENV"
          echo "cache_verilator_key=$cache_verilator_key" | tee -a "$GITHUB_ENV"
          echo "cache_test_restore_key=$cache_test_restore_key" | tee -a "$GITHUB_ENV"
          echo "cache_test_key=$cache_test_key" | tee -a "$GITHUB_ENV"

      - name: Restore verilator cache
        id: cache-verilator-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            /opt/verilator
            /opt/verilator/.cache
          key: ${{ env.cache_verilator_key }}
          restore-keys: ${{ env.cache_verilator_restore_key }}

      - name: Create virtualenv and install Python dependencies
        run: |
          python3 -m venv ./venv
          . ./venv/bin/activate
          echo $PATH | cut -d':' -f1 >> $GITHUB_PATH
          pip3 install -r ./requirements.txt

      - name: Run tests
        run: |
          make verilator-build
          make ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: build
